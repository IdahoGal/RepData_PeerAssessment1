source("http://www.openintro.org/stat/data/present.R")
present
names(present)
present$boys
plot(x = present$year, y = present$girls)
plot(x = present$year, y = present$girls, type = "l")
1211684 + 1148715
present$boys + present$girls
plot(present$year, present$boys + present$girls, type = "l")
plot(present$year, present$boys + present$girls, type = "l")
present$boys/present$girls
plot(present$year, present$boys/(present$boys + present$girls), type = "l")
present$boys > present$girls
plot(x = present$year, y = present$girls, type = "l")
plot(present$year, present$boys + present$girls, type = "l")
present$boys/present$girls
plot(present$year, present$boys/(present$boys + present$girls), type = "l")
present$boys > present$girls
plot(present$year, present$boys/present$girls, type = "l")
present$boys - present$girls
plot(present$year, present$boys - present$girls, type = "l")
dev.off()
if (!exists("inputCSV"))
{
inputCSV <- data.frame(read.csv("WFMachineCluster.csv"))
}
if (!exists("outputPDF"))
{
outputPDF <- "outputPDF.pdf"
}
WF_machine_cluster = inputCSV
pdf(outputPDF)
par(mfrow=c(1,1))
# Vary parameters for most readable graph
library(cluster)
clusplot(WF_machine_cluster, WF_machine_cluster$Assignments, color=TRUE, shade=TRUE,
labels=4, lines=0)
if (!exists("inputCSV"))
{
inputCSV <- data.frame(read.csv("WFMachineCluster.csv"))
}
if (!exists("outputPDF"))
{
outputPDF <- "outputPDF.pdf"
}
# Read file
# DataLab
WF_machine_cluster = inputCSV
# Cluster Plot against 1st 2 principal components
# DataLab.  This pdf command creates the outputPDF in the working
# folder.
pdf(outputPDF)
# Does par specify a device independent R graphics font familiy?
par(mfrow=c(1,1))
# Vary parameters for most readable graph
library(cluster)
clusplot(WF_machine_cluster, WF_machine_cluster$Assignments, color=TRUE, shade=TRUE,
labels=4, lines=0)
# seem to need this on my laptop in order to write to the pdf file. try dev.off()
#dev.off()
a <- available.packages()
head(rownames(a), 3)
head(rownames(a), 10)
find.package("devtools")
find.package("devtools")
install.packages("devtools")
libary(devtools)
library(devtools)
find_rtools()
x^3
cube(3)
cube <- function(x,n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
cube <- function(x,n) {
x^3
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
setwd("C:/Users/kbaroni/Documents/GitHub/RepData_PeerAssessment1")
unzip("activity.zip", overwrite="TRUE")
activity_data <- read.csv("./activity.csv")
summary(activity_data)
pData <- aggregate(activity_data$steps, by=list(activity_data$interval), mean )
View(pData)
head(pData)
View(pData)
pData <- aggregate(activity_data$steps, by=list(activity_data$interval), sum )
View(pData)
View(activity_data)
View(activity_data)
View(pData)
View(pData)
g <- ggplot(pData, aes(year, value))
pData <- aggregate(activity_data$steps, by=list(activity_data$interval), sum, na.rm = TRUE )
head(pData)
names(pData) <- c("Interval", "AverageSteps")
g <- ggplot(pData, aes(x=Interval, y=AverageSteps))
install.packages("data.table")
install.packages("xtable")
install.packages(ggplot2)
install.packages(ggplot2)
library(ggplot2)
library(ggplot2)
g <- ggplot(pData, aes(x=Interval, y=AverageSteps))
ggplot(data = pData, aes(x=factor(Interval), y=AverageSteps)) + geom_line()
g <- ggplot(data = pData, aes(x=factor(Interval), y=AverageSteps)) + geom_line()
ggplot(data = pData, aes(x=factor(Interval), y=AverageSteps)) + geom_line() + ggtitle("Part 2 Avg Steps Per Interval")
ggplot((data = pData, aes(x=Interval, y=AverageSteps)) + geom_line() + ggtitle("Part 2 Avg Steps Per Interval")
ggplot(data = pData, aes(x=Interval, y=AverageSteps)) + geom_line() + geom_point() + ggtitle("Part 2 Avg Steps Per Interval")
x <- max(pData$Steps)
x
ggplot(data = pData, aes(x=Interval, y=AverageSteps)) +
geom_line(colour="blue") + geom_point(colour="red", shape=21, fill="white") +
ggtitle("Part 2 Avg Steps Per Interval")
ggplot(data = pData, aes(x=Interval, y=AverageSteps)) +
geom_line(colour="blue") + geom_point(colour="blue", shape=21, fill="white") +
ggtitle("Part 2 Avg Steps Per Interval")
names(pData) <- c("Intervals", "AverageSteps")
g <- ggplot(data = pData, aes(x=factor(Intervals), y=AverageSteps))
ggplot(data = pData, aes(x=Intervals, y=AverageSteps)) +
geom_line(colour="blue") + geom_point(colour="blue", shape=21, fill="white") +
ggtitle("Part 2 Avg Steps Per Interval")
max(pData$AverageSteps)
pData[pData$AverageSteps = max(pData$AverageSteps)]
x <- max(pData$AverageSteps)
pData[pData$AverageSteps = x, ]
pData[pData$AverageSteps == x, ]
pData[835]
maxpData <- pData[pData$AverageSteps == x, ]
maxpData
y <- maxpData$Intervals
y
pData[pData$AverageSteps ==x, pData$Intervals]
maxpData <- pData[pData$AverageSteps ==x, ]
y <- maxData$Intervals
y <- maxpData$Intervals
sum(activity_data, na.rm=true)
is.na(activity_data)
y <- is.na(activity_data)
y
sum(y)
y <- is.na(activity_data)
pData <- activity_data
head(pData)
pData$Mean <- NA
head(pData)
pData <- aggregate(activity_data$steps, by=list(activity_data$interval), mean)
View(pData)
View(pData)
pData <- aggregate(activity_data$steps, by=list(activity_data$interval), sum, na.rm = TRUE )
pData <- aggregate(activity_data$steps, by=list(activity_data$interval), mean, na.rm = TRUE )
head(pData)
names(pData) <- c("Interval", "Mean")
head(activity_data)
combinedData <- merge(pData, activity_data, by.x="Interval", by.y="interval", all = FALSE)
head(combinedData)
View(combinedData)
x1 <- is.na(combinedData)
x1
y1 <- sum(x1)
y1
combinedData$steps[is.na(combinedData$steps)] <- combinedData$Mean[is.na(combinedData$steps)]
x2 <- is.na(combinedData)
y2 <- sum(x2)
y2
View(combinedData)
head(combinedData)
names(pData) <- c("Interval", "Mean", "Steps", "Date")
names(combinedData) <- c("Interval", "Mean", "Steps", "Date")
pData <- aggregate(combinedData$Steps, by=list(combinedData$Date), sum )
head(pData)
names(pData) <- c("Date", "TotalSteps")
ggplot(data = pData, aes(x=Date, y=TotalSteps, fill=Date)) + geom_bar(stat="identity")+ ggtitle("Part 3 Total Steps per Day")
meansteps <- mean(pData$TotalSteps)
totalsorted <- pData[order(pData$TotalSteps), ]
head(totalsorted)
mediansteps <- median(totalsorted$TotalSteps)
meansteps2
meansteps
newdata <- activity_data
View(newdata)
newdata <- pdata
combinedData
head(combinedData)
newdata$day <- weekdays(as.Date(combinedData$Date))
View(newdata)
head(newdata)
pData <- aggregate(newdata$Steps, by=list(newdata$day), mean)
View(combinedData)
head(combinedData)
head(newdata)
newdata <- combinedData
head(newdata)
newData <- combinedData
head(newData)
newData$day <- weekdays(as.Date(newData$Date))
head(newData)
pData <- aggregate(newData$Steps, by=list(newData$day), mean)
g <- ggplot(data = pData, aes(x=factor(Intervals), y=AverageSteps))
ggplot(data = pData, aes(x=Intervals, y=AverageSteps)) +
geom_line(colour="blue") + geom_point(colour="blue", shape=21, fill="white") +
ggtitle("Part 4 Time Series Avg Steps Factored")
head(pData)
head(newData)
pData <- aggregate(newData$Steps, by=list(newData$Interval), mean)
head(pData)
names(pData) <- c("Interval", "AverageSteps")
hp <- ggplot(newData, aes(x=Steps, y=Interval))
hp
hp <- ggplot(newData, aes(x=Steps, y=Interval)) + geom_point(shape=1)
hp
hp <- ggplot(newData, aes(x=Interval, y=AverageSteps)) + geom_point(shape=1)
hp
head(newData)
hp <- ggplot(newData, aes(x=Interval, y=Steps)) + geom_point(shape=1)
hp
hp + facet_grid(. ~ day)
hp + facet_grid(day ~ .)
?weekdays
ifelse( newData$day = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), "Weekday", "Weekend")
ifelse( newData$day == c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), "Weekday", "Weekend")
newData$type <- ifelse( newData$day == c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), "Weekday", "Weekend")
ifelse(newData$day == "Saturday", "Weekend", ifelse(newData$day == "Sunday", "Weekend", "Weekday"))
newData$Type <- ifelse(newData$day == "Saturday", "Weekend", ifelse(newData$day == "Sunday", "Weekend", "Weekday"))
head(newData)
newData <- combinedData
newData$day <- weekdays(as.Date(newData$Date))
newData$Type <- ifelse(newData$day == "Saturday", "Weekend", ifelse(newData$day == "Sunday", "Weekend", "Weekday"))
hp <- ggplot(newData, aes(x=Interval, y=Steps)) + geom_point(shape=1)
hp + facet_grid(Type ~ .)
ggplot(data = pData, aes(x=Interval, y=Steps)) +
geom_line(colour="blue") + geom_point(colour="blue", shape=21, fill="white") +
facet_grid(Type ~ .) +
ggtitle("Part 4 Time Series Avg Steps Factored")
g <- ggplot(data = newData, aes(x=Interval, y=Steps))
g + geom_line(colour="blue") + geom_point(colour="blue", shape=21, fill="white")
g + facet_grid(Type ~ .) +  ggtitle("Part 4 Time Series Avg Steps Factored")
g + facet_grid(Type ~ .)
g + geom_line(colour="blue") + geom_point(colour="blue", shape=21, fill="white") + facet_grid(Type ~ .)
g + ggtitle("Part 4 Time Series Avg Steps Factored")
g <- ggplot(data = newData, aes(x=Interval, y=Steps)) + ggtitle("Part 4")
g + geom_line(colour="blue") + geom_point(colour="blue", shape=21, fill="white") + facet_grid(Type ~ .)
